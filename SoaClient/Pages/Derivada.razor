@page "/Derivada"
@using SoaClient.Models
@inject EcuacionService EqServ

<article class="container-fluid">
    <section class="row text-center justify-content-center">
        <h4 class="col-11">Cálculo de la Derivada de la Ecuación</h4>
    </section>
    <section class="row justify-content-center text-center">
        <h2 class="col-11"><b>f(x)=ax**2+bx+c</b></h2>
    </section>
    <EditForm Model="@form" OnValidSubmit="@Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <section class="row justify-content-center text-center">
            <div class="col-11">
                <div class="row">
                    <label for="eq" class="col col-form-label">Ingresar la ecuación:</label>
                    <InputText @bind-Value="form.Eq" class="form-control col" style="width: 10em;" id="eq" name="eq"></InputText>
                </div>
            </div>
        </section>
        <section class="row justify-content-center text-center">
            <div class="col-11">
                <div class="row">
                    <label for="n" class="col col-form-label">Ingresar la ecuación:</label>
                    <InputNumber @bind-Value="form.N" class="form-control col" style="width: 10em;" id="n" name="n"></InputNumber>
                </div>
            </div>
        </section>
        <section class="row justify-content-center text-center">
            <button type="submit" class="col-4 btn">Calcular</button>
        </section>
    </EditForm>
    <section class="row justify-content-center">
        <div class="col-10">
            @if (!string.IsNullOrEmpty(diff))
            {
                <input type="text" id="sol1" name="sol1" value="@diff" class="col form-control" disabled />
            }
        </div>
    </section>
</article>

@code {
    private DiffEcuacionForm form = new();

    private string diff;

    private async Task Submit()
    {
        EqServ.Ecuacion = form.Eq;
        diff = await EqServ.CalcularDerivadas((uint) form.N);
    }

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(EqServ.Ecuacion)) form.Eq = EqServ.Ecuacion;
        base.OnInitialized();
    }
}
